name: Cross-Compile Build (macOS and Linux)

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest # Build everything on macOS

    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin # macOS Intel
            artifact_name: acp-script-macos-x86_64
          - target: aarch64-apple-darwin # macOS ARM64
            artifact_name: acp-script-macos-arm64
          - target: x86_64-unknown-linux-musl # Linux (64-bit, static linking)
            artifact_name: acp-script-linux-amd64
            # No need for separate 'install_deps' now
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install MUSL Support (for Linux cross-compilation)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          brew install FiloSottile/musl-cross/musl-cross
          rustup target add x86_64-unknown-linux-musl

      - name: Build for ${{ matrix.target }}
        run: |
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-musl" ]]; then
            echo "RUSTFLAGS=-C linker=/opt/homebrew/opt/musl-cross/bin/x86_64-linux-musl-gcc" >> "$GITHUB_ENV"
          fi
          cargo build --release --target ${{ matrix.target }}
        env: #This goes AFTER build.
          RUSTFLAGS: "-C target-feature=+crt-static" #Fix static compilation

      - name: Create Universal Binary (macOS)
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          while [ ! -f "target/x86_64-apple-darwin/release/${{ matrix.artifact_name }}" ]; do
            sleep 5
          done
          lipo -create \
            "target/x86_64-apple-darwin/release/${{ matrix.artifact_name }}" \
            "target/aarch64-apple-darwin/release/${{ matrix.artifact_name }}" \
            -output "universal-${{ matrix.artifact_name }}"
          mv "universal-${{ matrix.artifact_name }}" ${{ matrix.artifact_name }}-universal

      - name: Package Binary (Exclude aarch64 on macOS - part of universal)
        if: matrix.target != 'aarch64-apple-darwin'
        run: |
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            mv target/${{ matrix.target }}/release/${{ matrix.artifact_name }} ${{ matrix.artifact_name }}
          fi
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-musl" ]]; then
              mv target/x86_64-unknown-linux-musl/release/${{ matrix.artifact_name }} ${{ matrix.artifact_name }}
          fi

      - name: Upload Release Asset (conditional name)
        if: matrix.target != 'aarch64-apple-darwin'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact_name }} # Conditional file name

      - name: Upload aarch64 universal file #Separate step, conditional skipped previously
        if: matrix.target == 'aarch64-apple-darwin' #Avoid multiple artifacts uploads
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.artifact_name }}-universal
